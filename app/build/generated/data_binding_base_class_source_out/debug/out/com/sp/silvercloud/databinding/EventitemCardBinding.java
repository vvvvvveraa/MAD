// Generated by view binder compiler. Do not edit!
package com.sp.silvercloud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sp.silvercloud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventitemCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateTextView;

  @NonNull
  public final ImageView eventImageView;

  @NonNull
  public final TextView interestTextView;

  @NonNull
  public final TextView newDescriptionTextView;

  @NonNull
  public final TextView titleTextView;

  private EventitemCardBinding(@NonNull CardView rootView, @NonNull TextView dateTextView,
      @NonNull ImageView eventImageView, @NonNull TextView interestTextView,
      @NonNull TextView newDescriptionTextView, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.dateTextView = dateTextView;
    this.eventImageView = eventImageView;
    this.interestTextView = interestTextView;
    this.newDescriptionTextView = newDescriptionTextView;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EventitemCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventitemCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.eventitem_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventitemCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateTextView;
      TextView dateTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTextView == null) {
        break missingId;
      }

      id = R.id.eventImageView;
      ImageView eventImageView = ViewBindings.findChildViewById(rootView, id);
      if (eventImageView == null) {
        break missingId;
      }

      id = R.id.interestTextView;
      TextView interestTextView = ViewBindings.findChildViewById(rootView, id);
      if (interestTextView == null) {
        break missingId;
      }

      id = R.id.newDescriptionTextView;
      TextView newDescriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (newDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new EventitemCardBinding((CardView) rootView, dateTextView, eventImageView,
          interestTextView, newDescriptionTextView, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
