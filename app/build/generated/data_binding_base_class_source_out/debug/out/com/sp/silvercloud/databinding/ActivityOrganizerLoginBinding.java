// Generated by view binder compiler. Do not edit!
package com.sp.silvercloud.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sp.silvercloud.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrganizerLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final EditText emailField;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final LinearLayout loginFormContainer;

  @NonNull
  public final TextView loginTitle;

  @NonNull
  public final EditText passwordField;

  @NonNull
  public final TextView signUpLink;

  private ActivityOrganizerLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView backButton, @NonNull EditText emailField, @NonNull Button loginButton,
      @NonNull LinearLayout loginFormContainer, @NonNull TextView loginTitle,
      @NonNull EditText passwordField, @NonNull TextView signUpLink) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.emailField = emailField;
    this.loginButton = loginButton;
    this.loginFormContainer = loginFormContainer;
    this.loginTitle = loginTitle;
    this.passwordField = passwordField;
    this.signUpLink = signUpLink;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrganizerLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrganizerLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_organizer_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrganizerLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.emailField;
      EditText emailField = ViewBindings.findChildViewById(rootView, id);
      if (emailField == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.loginFormContainer;
      LinearLayout loginFormContainer = ViewBindings.findChildViewById(rootView, id);
      if (loginFormContainer == null) {
        break missingId;
      }

      id = R.id.loginTitle;
      TextView loginTitle = ViewBindings.findChildViewById(rootView, id);
      if (loginTitle == null) {
        break missingId;
      }

      id = R.id.passwordField;
      EditText passwordField = ViewBindings.findChildViewById(rootView, id);
      if (passwordField == null) {
        break missingId;
      }

      id = R.id.signUpLink;
      TextView signUpLink = ViewBindings.findChildViewById(rootView, id);
      if (signUpLink == null) {
        break missingId;
      }

      return new ActivityOrganizerLoginBinding((ConstraintLayout) rootView, backButton, emailField,
          loginButton, loginFormContainer, loginTitle, passwordField, signUpLink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
